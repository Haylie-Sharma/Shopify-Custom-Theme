<div class="page-width">
    {% paginate collection.products by 8 %}
    <div class="collection-header-row">
      <h2 class="collection-title">{{ collection.title }}</h2>
      <div class="collection-sort-wrap">
        <p class="collection-sort-label">Sort by:</p>
       <select id="sort-by" class="collection-sort-select">
       {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}
  
      {% for option in collection.sort_options %}
       <option value="{{ option.value }}" {% if option.value == sort_by %}selected="selected"{% endif %}>
        {{ option.name }}
       </option>
      {% endfor %}
      </select>
      </div>
    </div>
    <div class="collection-products">
      {% for product in collection.products %}
        <a href="{{ product.url }}" class="collection-product-link">
          {% render 'product-card', product: product %}
        </a>
      {% endfor %}
    </div>
    <div class="collection-pagination">
      {{- paginate | default_pagination -}}
    </div>
    {% endpaginate %}
  </div>
  
  
  
  
  <script>
    window.Shopify = window.Shopify || {};
    Shopify.queryParams = Shopify.queryParams || {};
  
    // Preserve existing query parameters
    if (location.search.length) {
      var params = location.search.substr(1).split('&');
  
      for (var i = 0; i < params.length; i++) {
        var keyValue = params[i].split('=');
  
        if (keyValue.length) {
          Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
        }
      }
    }
  
    // Update sort_by query parameter on select change
    document.querySelector('#sort-by').addEventListener('change', function(e) {
      var value = e.target.value;
  
      Shopify.queryParams.sort_by = value;
      location.search = new URLSearchParams(Shopify.queryParams).toString();
    });
  </script>